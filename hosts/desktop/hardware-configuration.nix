# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/897fdd9b-934d-4927-9b25-2d05f590291d";
      fsType = "ext4";
    };

    "/boot" = {
      device = "/dev/disk/by-uuid/9D19-48AC";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

    "/drive" = {
      device = "/dev/disk/by-uuid/d58adf6f-1d65-4468-8174-7861596daa0f";
      fsType = "ext4";
    };
  };

  swapDevices = [{
    device = "/var/.swap";
    size = 18 * 1024;
  }];

  # Hibernation
  boot.resumeDevice = "/dev/disk/by-uuid/897fdd9b-934d-4927-9b25-2d05f590291d";
  boot.kernelParams = [ "mem_sleep_default=deep" "resume_offset=220606464" ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f0u12.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
